(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{386:function(t,s,a){t.exports=a.p+"assets/img/卷.b653b11c.jpg"},409:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"webpack-代码分割-和-路由懒加载、组件懒加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-代码分割-和-路由懒加载、组件懒加载"}},[t._v("#")]),t._v(" Webpack 代码分割 和 路由懒加载、组件懒加载")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("代码打包是我们平时项目必经的一步，为了减小打包体积，加快加载速度，代码分割是不可缺少的一部分，虽然现在的框架（例如 vue，react）都已经在内部将 webpack 配置好了，但是原理还是要知道的。")]),t._v(" "),n("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:a(386)}}),t._v(" "),n("h2",{attrs:{id:"代码分割的三种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码分割的三种方式"}},[t._v("#")]),t._v(" 代码分割的三种方式")]),t._v(" "),n("ul",[n("li",[t._v("入口：使用 "),n("code",[t._v("entry")]),t._v(" 配置手动地分离代码")]),t._v(" "),n("li",[t._v("动态导入：通过 "),n("code",[t._v("import()")]),t._v(" 来分离代码")]),t._v(" "),n("li",[t._v("防止重复：使用 "),n("code",[t._v("splitChunks")]),t._v(" 去重和分离 "),n("code",[t._v("chunk")])])]),t._v(" "),n("p",[t._v("本文着重记录第三种 "),n("code",[t._v("splitChunks")]),t._v(" 的用法")]),t._v(" "),n("h2",{attrs:{id:"splitchunks-代码拆分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-代码拆分"}},[t._v("#")]),t._v(" splitChunks 代码拆分")]),t._v(" "),n("h3",{attrs:{id:"默认配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认配置"}},[t._v("#")]),t._v(" 默认配置")]),t._v(" "),n("div",{staticClass:"language-json light extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("splitChunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示选择哪些 chunks 进行分割，可选值有：async，initial和all")]),t._v("\n    chunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示新分离出的chunk必须大于等于minSize，默认为30000，约30kb。")]),t._v("\n    minSize"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示一个模块至少应被minChunks个chunk所包含才能分割。默认为1。")]),t._v("\n    minChunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示按需加载文件时，并行请求的最大数目。默认为5。")]),t._v("\n    maxAsyncRequests"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示加载入口文件时，并行请求的最大数目。默认为3。")]),t._v("\n    maxInitialRequests"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示拆分出的chunk的名称连接符。默认为~。如chunk~vendors.js")]),t._v("\n    automaticNameDelimiter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" '~'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置chunk的文件名。默认为true。当为true时，splitChunks基于chunk和cacheGroups的key自动命名。")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cacheGroups 下可以可以配置多个组，每个组根据test设置条件，符合test条件的模块，就分配到该组。模块可以被多个组引用，但最终会根据priority来决定打包到哪个组中。默认将所有来自 node_modules目录的模块打包至vendors组，将两个以上的chunk所共享的模块打包至default组。")]),t._v("\n    cacheGroups"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vendors"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" /"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("node_modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-10")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        default"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            minChunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            reuseExistingChunk"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"chunks-字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chunks-字段"}},[t._v("#")]),t._v(" "),n("strong",[t._v("chunks 字段")])]),t._v(" "),n("p",[t._v("可选值有 "),n("code",[t._v("async")]),t._v("、 "),n("code",[t._v("initial")]),t._v(" 和 "),n("code",[t._v("all")]),t._v("，默认值是 "),n("code",[t._v("async")]),t._v("，作用范围如下：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("async")]),t._v(" 异步加载的 chunk")]),t._v(" "),n("li",[n("code",[t._v("initial")]),t._v(" 非异步加载的初始 chunk")]),t._v(" "),n("li",[n("code",[t._v("all")]),t._v(" 包括了"),n("code",[t._v("初始chunk")]),t._v(" 和 "),n("code",[t._v("异步chunk")])])]),t._v(" "),n("p",[t._v("推荐使用 "),n("strong",[n("code",[t._v("all")])])]),t._v(" "),n("h3",{attrs:{id:"maxinitialrequests-字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maxinitialrequests-字段"}},[t._v("#")]),t._v(" "),n("strong",[t._v("maxInitialRequests 字段")])]),t._v(" "),n("p",[t._v("maxInitialRequests 字段指 splitchunk 分割代码后请求的初始 chunk 最大数量")]),t._v(" "),n("p",[n("strong",[t._v("注意：这是一个约束，并不是约束项目线上时请求数量，而是约束在代码分割时，如果遍历到一个满足单独分包为初始 chunk 的文件，这时候已经单独分包为初始 chunk 的数量达到了 maxInitialRequests 设置的数量,则不能拆。")])]),t._v(" "),n("p",[t._v("例如有一个 index.js (是入口文件)")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n")])])]),n("p",[t._v("splitChunks 修改为:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("chunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nmaxInitialRequests"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),n("p",[t._v("则最终 vue 不会被单独打包,因为 vue 是 index.js 的前置依赖,所以要在页面初始时请求,如果单独分包,那么初始化时的请求数变成了 2,不符合 maxInitialRequests 设置的为 1 的条件,所以 splitChunks 不会对 index.js 进行拆分。")]),t._v(" "),n("h3",{attrs:{id:"maxasyncrequests-字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maxasyncrequests-字段"}},[t._v("#")]),t._v(" "),n("strong",[t._v("maxAsyncRequests 字段")])]),t._v(" "),n("p",[t._v("maxAsyncRequests 表示 splitChunks 在拆分 chunk 后，并行加载的异步 chunk 数不超过指定的值。")]),t._v(" "),n("p",[t._v("例如 "),n("code",[t._v("import()")]),t._v(" 就是异步加载")]),t._v(" "),n("h3",{attrs:{id:"minchunks-字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minchunks-字段"}},[t._v("#")]),t._v(" "),n("strong",[t._v("minChunks 字段")])]),t._v(" "),n("p",[t._v("minChunks 表示一个模块至少应被指定个数的 chunk 所共享才能分割。默认为 1。")]),t._v(" "),n("h3",{attrs:{id:"cachegroups-字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups-字段"}},[t._v("#")]),t._v(" "),n("strong",[t._v("cacheGroups 字段")])]),t._v(" "),n("p",[t._v("cacheGroups 是一个对象,内部每个字段也是对象,并且会继承 splitChunks 的属性,也可以重写覆盖继承来的属性值。还有一些属性只能在 cacheGroups 中使用："),n("code",[t._v("test")]),t._v("、"),n("code",[t._v("priority")]),t._v(" 、"),n("code",[t._v("reuseExistingChunk")]),t._v("。")]),t._v(" "),n("p",[t._v("通过 cacheGroups，我们可以定义自定义 chunk 组，通过 test 条件对模块进行过滤，符合条件的模块分配到相同的组")]),t._v(" "),n("ul",[n("li",[t._v("test 条件匹配")]),t._v(" "),n("li",[t._v("priority 被分配到多个不同组的时候根据优先级确定最终分配到哪个组")]),t._v(" "),n("li",[t._v("name 重命名 chunk 名称")]),t._v(" "),n("li",[t._v("reuseExistingChunk 如果当前的 chunk 匹配到已经分包的模块，是否重用这个模块")])]),t._v(" "),n("p",[t._v("cacheGroups 的默认值:")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("cacheGroups"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 来自node_modules中的文件")]),t._v("\n        vendors"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" /"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("node_modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-10")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被两个及以上文件共享的文件")]),t._v("\n        default"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          minChunks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          reuseExistingChunk"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("再看这个例子:")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("cacheGroups"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  vendors"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" /"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("node_modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customName"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-10")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  customGroup"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" /"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("node_modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\\\/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customName1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    priority"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("模块还可以分配到多个不同的组，但最终会根据 priority 优先级决定打包到哪个 chunk, name 用来重命名打包出来的 chunk 名字(默认是组的 key + '~' + 源 chunk 名组成),所以在这样的配置下, node_modules 中的文件会被打包到名为 customName1 的 chunk 中")]),t._v(" "),n("h2",{attrs:{id:"路由懒加载和组件懒加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载和组件懒加载"}},[t._v("#")]),t._v(" 路由懒加载和组件懒加载")]),t._v(" "),n("p",[t._v("当我们打开浏览器，访问网站时，此时默认是刚打开就去加载所有页面，路由懒加载就是只加载你当前点击的那个模块。 按需去加载路由对应的资源，提高首屏加载速度 , 实现方式则是使用异步加载的写法")]),t._v(" "),n("p",[t._v("懒加载有两种方式:")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("1、vue 异步组件实现路由懒加载 "),n("code",[t._v("component：resolve=>(['需要加载的路由的地址'，resolve])")])]),t._v(" "),n("p",[t._v("2、es 提出的 import(推荐使用这种方式) "),n("code",[t._v("const HelloWorld = （）=>import('需要加载的模块地址')")])])]),t._v(" "),n("h3",{attrs:{id:"路由懒加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载"}},[t._v("#")]),t._v(" 路由懒加载")]),t._v(" "),n("p",[t._v("除了 import()的异步加载实现路由懒加载外,这里还有一个 webpackChunkName 魔法注释,按照这个格式书写,如果满足 splitchunks 的条件,单独打包出来的 login.vue 的 chunk 名将会变成 login")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" router "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Router")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  routes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "login" */')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("@/views/login.vue")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"组件懒加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件懒加载"}},[t._v("#")]),t._v(" 组件懒加载")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("One"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("One"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  components"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"One-com"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./one"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      msg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Welcome to Your Vue.js App'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),n("p",[t._v("本文参考:")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6985725946598785055",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue 路由懒加载及组件懒加载"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6844904103848443912",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何使用 splitChunks 精细控制代码分割"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);